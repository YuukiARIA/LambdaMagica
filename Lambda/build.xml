<?xml version="1.0" encoding="UTF-8"?>
<project name="Lambda Magica" basedir="." default="distribute">

	<property name="version" value="3.82" />
	<property name="product-name" value="lambda-magica-${version}" />

	<property name="src" location="src" />
	<property name="src.test" location="test" />
	<property name="classes.main" location="classes/main" />
	<property name="classes.test" location="classes/test" />
	<property name="dist" value="lambda-magica" />
	<property name="dir.dist" location="product" />

	<property name="java.encoding" value="UTF-8" />
	<property name="java.target.version" value="1.6" />
	<property name="java.source.version" value="1.6" />

	<property name="target-jar" value="lm.jar" />
	<property name="dist-tgz" value="${product-name}.tar.gz" />
	<property name="dist-zip" value="${product-name}.zip" />
	<property name="dist-osx-name" value="${product-name}-osx" />

	<path id="test.classpath">
		<pathelement location="${classes.main}" />
		<pathelement location="./lib/junit.jar" />
		<pathelement location="./lib/hamcrest-core.jar" />
	</path>

	<target name="mkdir">
		<mkdir dir="${classes.main}" />
		<mkdir dir="${classes.test}" />
	</target>

	<target name="mkdir_dist">
		<mkdir dir="${dist}" />
	</target>

	<target name="mkdir_product">
		<mkdir dir="${dir.dist}" />
	</target>

	<target name="compile" depends="mkdir">
		<javac srcdir="${src}" destdir="${classes.main}" encoding="${java.encoding}"
			target="${java.target.version}" source="${java.source.version}"
			includeantruntime="false" />
	</target>

	<target name="compile-for-test" depends="mkdir,compile">
		<javac srcdir="${src.test}" destdir="${classes.test}" encoding="${java.encoding}"
			target="${java.target.version}" source="${java.source.version}"
			includeantruntime="false">
			<classpath refid="test.classpath" />
		</javac>
	</target>

	<target name="jar" depends="mkdir_dist,compile">
		<jar destfile="${dist}/${target-jar}" basedir="${classes.main}" compress="true" update="false">
			<manifest>
				<attribute name="Main-Class" value="lambda.gui.Main" />
			</manifest>
		</jar>
	</target>

	<target name="build-osx-app" depends="jar">
		<exec executable="./build-mac-app.sh"></exec>
	</target>

	<target name="dist" depends="mkdir_dist,mkdir_product,jar">
		<tar tarfile="${dir.dist}/${dist-tgz}" compression="gzip">
			<tarfileset dir="." includes="${dist}/*.sh,${dist}/*.bat" mode="755" />
			<tarfileset dir="." includes="${dist}/**" excludes="**/*.sh,**/*.bat" />
		</tar>
	</target>

	<target name="zip" depends="mkdir_dist,mkdir_product,jar">
		<zip destfile="${dir.dist}/${dist-zip}" encoding="UTF-8">
			<zipfileset dir="." includes="${dist}/*.sh,${dist}/*.bat" filemode="755" />
			<zipfileset dir="." includes="${dist}/**" excludes="**/*.sh,**/*.bat" />
		</zip>
	</target>

	<target name="dist-osx-tgz" depends="mkdir_dist,mkdir_product,build-osx-app">
		<tar destfile="${dir.dist}/${dist-osx-name}.tgz" compression="gzip">
			<tarfileset dir="product" includes="LambdaMagica.app/**/*" excludes="**/*.sh" prefix="lambda-magica" />
			<tarfileset dir="product" includes="LambdaMagica.app/**/*.sh" prefix="lambda-magica" mode="755" />
			<tarfileset dir="." includes="${dist}/*.sh" mode="755" />
			<tarfileset dir="." includes="${dist}/**" excludes="**/*.sh,**/*.bat" />
		</tar>
	</target>

	<target name="dist-osx-zip" depends="mkdir_dist,mkdir_product,build-osx-app">
		<zip destfile="${dir.dist}/${dist-osx-name}.zip" encoding="UTF-8">
			<zipfileset dir="product" includes="LambdaMagica.app/**/*" excludes="**/*.sh" prefix="lambda-magica" />
			<zipfileset dir="product" includes="LambdaMagica.app/**/*.sh" prefix="lambda-magica" filemode="755" />
			<zipfileset dir="." includes="${dist}/*.sh" filemode="755" />
			<zipfileset dir="." includes="${dist}/**" excludes="**/*.sh,**/*.bat" />
		</zip>
	</target>

	<target name="distribute" depends="dist,zip">
	</target>

	<target name="junit" depends="compile-for-test">
		<junit haltonfailure="yes">
			<formatter type="plain" usefile="false" />
			<classpath>
				<path refid="test.classpath" />
				<pathelement location="${classes.test}" />
			</classpath>
			<batchtest>
				<fileset dir="${classes.test}">
					<include name="**/*.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="clean">
		<delete dir="${classes.main}" />
		<delete dir="${classes.test}" />
		<delete file="${dist}/${target-jar}" />
	</target>

</project>
